<%- include('../includes/head.ejs') %>
<link rel="stylesheet" href="/css/auth.css">
<link rel="stylesheet" href="/css/forms.css">
<style>
    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        min-height: 100vh;
        background: linear-gradient(-45deg, #667eea, #764ba2, #f093fb, #f5576c, #4facfe, #00f2fe);
        background-size: 400% 400%;
        animation: gradient-shift 15s ease infinite;
        margin: 0;
        padding: 0;
        position: relative;
        overflow-x: hidden;
    }

    @keyframes gradient-shift {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }

    @keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-15px); }
    }

    @keyframes fade-in {
        0% { opacity: 0; transform: translateY(30px); }
        100% { opacity: 1; transform: translateY(0); }
    }

    @keyframes pulse-glow {
        0%, 100% { box-shadow: 0 0 25px rgba(139, 92, 246, 0.4); }
        50% { box-shadow: 0 0 50px rgba(139, 92, 246, 0.7); }
    }

    /* Floating background elements */
    .bg-element {
        position: absolute;
        border-radius: 50%;
        filter: blur(80px);
        pointer-events: none;
        animation: float 8s ease-in-out infinite;
    }

    .bg-element:nth-child(1) {
        top: 20%;
        left: 20%;
        width: 250px;
        height: 250px;
        background: rgba(147, 51, 234, 0.3);
    }

    .bg-element:nth-child(2) {
        top: 70%;
        right: 20%;
        width: 350px;
        height: 350px;
        background: rgba(236, 72, 153, 0.25);
        animation-delay: 3s;
    }

    .bg-element:nth-child(3) {
        bottom: 20%;
        left: 40%;
        width: 300px;
        height: 300px;
        background: rgba(59, 130, 246, 0.25);
        animation-delay: 6s;
    }

    main {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        padding: 20px;
        position: relative;
        z-index: 10;
    }

    .password-reset-container {
        background: rgba(255, 255, 255, 0.25);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 24px;
        padding: 50px 40px;
        width: 100%;
        max-width: 450px;
        box-shadow: 0 30px 60px rgba(0, 0, 0, 0.15);
        animation: fade-in 1s ease-out;
    }

    .reset-header {
        text-align: center;
        margin-bottom: 35px;
    }

    .reset-icon {
        width: 70px;
        height: 70px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        border-radius: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 25px;
        animation: fade-in 1s ease-out 0.3s both;
        transform: scale(1);
        transition: transform 0.3s ease;
    }

    .reset-icon:hover {
        transform: scale(1.05);
    }

    .reset-icon svg {
        width: 35px;
        height: 35px;
        color: white;
    }

    .centered h1 {
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-size: 2.2rem;
        font-weight: 700;
        margin-bottom: 12px;
        letter-spacing: -0.5px;
    }

    .reset-subtitle {
        color: rgba(75, 85, 99, 0.8);
        font-size: 1rem;
        line-height: 1.5;
        margin-bottom: 8px;
    }

    .security-note {
        color: rgba(75, 85, 99, 0.7);
        font-size: 0.875rem;
        font-style: italic;
    }

    .form-control {
        margin-bottom: 25px;
        position: relative;
    }

    .form-control label {
        display: block;
        margin-bottom: 10px;
        color: #374151;
        font-weight: 600;
        font-size: 0.9rem;
        letter-spacing: 0.3px;
    }

    .input-wrapper {
        position: relative;
    }

    .input-icon {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #9CA3AF;
        width: 18px;
        height: 18px;
        z-index: 2;
    }

    .form-control input[type="password"] {
        width: 100%;
        padding: 16px 16px 16px 45px;
        border: 2px solid rgba(209, 213, 219, 0.6);
        border-radius: 14px;
        font-size: 1rem;
        background: rgba(255, 255, 255, 0.9);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        outline: none;
        font-family: inherit;
    }

    .form-control input[type="password"]:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.15);
        background: rgba(255, 255, 255, 1);
        transform: translateY(-1px);
    }

    .password-toggle {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #9CA3AF;
        cursor: pointer;
        padding: 6px;
        transition: all 0.2s;
        border-radius: 6px;
    }

    .password-toggle:hover {
        color: #6B7280;
        background: rgba(156, 163, 175, 0.1);
    }

    .password-strength {
        margin-top: 8px;
        font-size: 0.8rem;
        color: #6B7280;
    }

    .strength-bar {
        height: 4px;
        background: #E5E7EB;
        border-radius: 2px;
        margin-top: 6px;
        overflow: hidden;
    }

    .strength-fill {
        height: 100%;
        width: 0%;
        transition: all 0.3s ease;
        border-radius: 2px;
    }

    .strength-weak { background: #EF4444; width: 25%; }
    .strength-fair { background: #F59E0B; width: 50%; }
    .strength-good { background: #10B981; width: 75%; }
    .strength-strong { background: #059669; width: 100%; }

    .user-message {
        padding: 16px;
        border-radius: 12px;
        margin-bottom: 25px;
        font-size: 0.9rem;
        animation: fade-in 0.5s ease-out;
    }

    .user-message__error {
        background: rgba(254, 242, 242, 0.95);
        color: #dc2626;
        border: 1px solid rgba(248, 113, 113, 0.3);
        border-left: 4px solid #dc2626;
    }

    .btn {
        width: 100%;
        padding: 18px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
        border-radius: 14px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        letter-spacing: 0.3px;
        margin-top: 10px;
    }

    .btn:hover {
        transform: translateY(-2px);
        animation: pulse-glow 2s ease-in-out infinite;
    }

    .btn:active {
        transform: translateY(0);
    }

    .btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
        transition: left 0.6s;
    }

    .btn:hover::before {
        left: 100%;
    }

    .btn:disabled {
        opacity: 0.7;
        cursor: not-allowed;
        transform: none;
        animation: none;
    }

    .security-tips {
        margin-top: 30px;
        padding: 20px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        border: 1px solid rgba(255, 255, 255, 0.15);
    }

    .security-tips h3 {
        color: #374151;
        font-size: 0.95rem;
        font-weight: 600;
        margin-bottom: 12px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .security-tips ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .security-tips li {
        color: rgba(75, 85, 99, 0.8);
        font-size: 0.85rem;
        margin-bottom: 6px;
        padding-left: 16px;
        position: relative;
    }

    .security-tips li::before {
        content: 'â€¢';
        color: #667eea;
        font-weight: bold;
        position: absolute;
        left: 0;
    }

    /* Responsive design */
    @media (max-width: 480px) {
        .password-reset-container {
            padding: 40px 25px;
            margin: 10px;
            border-radius: 20px;
        }
        
        .centered h1 {
            font-size: 1.9rem;
        }

        .reset-icon {
            width: 60px;
            height: 60px;
        }

        .reset-icon svg {
            width: 30px;
            height: 30px;
        }
    }
</style>
</head>

<body>
    <%- include('../includes/navigation.ejs') %>

    <!-- Floating background elements -->
    <div class="bg-element"></div>
    <div class="bg-element"></div>
    <div class="bg-element"></div>

    <main>
        <div class="password-reset-container">
            <div class="reset-header">
                <div class="reset-icon">
                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
                    </svg>
                </div>
                <div class="centered">
                    <h1>Set New Password</h1>
                </div>
                <p class="reset-subtitle">Create a strong, secure password for your account</p>
                <p class="security-note">Your password should be unique and memorable to you</p>
            </div>

            <% if (errorMessage) { %>
                <div class="user-message user-message__error">
                    <strong>Error:</strong> <%= errorMessage %>
                </div>
            <% } %>

            <form class="login-form" method="POST" action="/new-password" novalidate>
                <div class="form-control">
                    <label for="password">New Password</label>
                    <div class="input-wrapper">
                        <svg class="input-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                        </svg>
                        <input 
                            type="password" 
                            name="password" 
                            id="password" 
                            placeholder="Enter your new password"
                            required
                            minlength="8"
                        >
                        <button type="button" class="password-toggle" onclick="togglePassword('password')">
                            <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                    <div class="password-strength">
                        <span id="strength-text">Password strength</span>
                        <div class="strength-bar">
                            <div class="strength-fill" id="strength-fill"></div>
                        </div>
                    </div>
                </div>

                <div class="form-control">
                    <label for="confirmPassword">Confirm New Password</label>
                    <div class="input-wrapper">
                        <svg class="input-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <input 
                            type="password" 
                            name="confirmPassword" 
                            id="confirmPassword" 
                            placeholder="Confirm your new password"
                            required
                        >
                        <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                            <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                </div>

                <div class="centered">
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                    <input type="hidden" name="userId" value="<%= userId %>">
                    <input type="hidden" name="passwordToken" value="<%= passwordToken %>">
                    <button class="btn" type="submit" id="submit-btn">Update Password</button>
                </div>
            </form>

            <div class="security-tips">
                <h3>
                    <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                    </svg>
                    Password Security Tips
                </h3>
                <ul>
                    <li>Use at least 8 characters with mixed case letters</li>
                    <li>Include numbers and special characters</li>
                    <li>Avoid common words or personal information</li>
                    <li>Don't reuse passwords from other accounts</li>
                </ul>
            </div>
        </div>
    </main>

    <%- include('../includes/end.ejs') %>

    <script>
        function togglePassword(fieldId) {
            const passwordInput = document.getElementById(fieldId);
            const isPassword = passwordInput.type === 'password';
            passwordInput.type = isPassword ? 'text' : 'password';
        }

        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            const checks = {
                length: password.length >= 8,
                lowercase: /[a-z]/.test(password),
                uppercase: /[A-Z]/.test(password),
                numbers: /\d/.test(password),
                special: /[!@#$%^&*(),.?":{}|<>]/.test(password)
            };

            strength = Object.values(checks).filter(Boolean).length;
            
            return {
                score: strength,
                checks: checks
            };
        }

        // Real-time password strength feedback
        document.getElementById('password').addEventListener('input', function() {
            const password = this.value;
            const result = checkPasswordStrength(password);
            const strengthFill = document.getElementById('strength-fill');
            const strengthText = document.getElementById('strength-text');

            // Remove existing classes
            strengthFill.className = 'strength-fill';

            if (password.length === 0) {
                strengthText.textContent = 'Password strength';
                return;
            }

            if (result.score <= 2) {
                strengthFill.classList.add('strength-weak');
                strengthText.textContent = 'Weak password';
            } else if (result.score === 3) {
                strengthFill.classList.add('strength-fair');
                strengthText.textContent = 'Fair password';
            } else if (result.score === 4) {
                strengthFill.classList.add('strength-good');
                strengthText.textContent = 'Good password';
            } else {
                strengthFill.classList.add('strength-strong');
                strengthText.textContent = 'Strong password';
            }
        });

        // Form validation
        document.querySelector('.login-form').addEventListener('submit', function(e) {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const submitBtn = document.getElementById('submit-btn');

            if (password !== confirmPassword) {
                e.preventDefault();
                alert('Passwords do not match. Please try again.');
                return;
            }

            if (password.length < 8) {
                e.preventDefault();
                alert('Password must be at least 8 characters long.');
                return;
            }

            // Add loading state
            submitBtn.innerHTML = 'Updating Password...';
            submitBtn.disabled = true;
        });
    </script>
</body>
